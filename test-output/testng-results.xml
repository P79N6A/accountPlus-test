<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" total="3" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="12676" started-at="2018-06-06T08:42:43Z" finished-at="2018-06-06T08:42:56Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="12676" started-at="2018-06-06T08:42:43Z" finished-at="2018-06-06T08:42:56Z">
      <class name="com.accp.test.demo.PayCreate">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.accp.test.demo.PayCreate@5579bb86]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="10462" started-at="2018-06-06T16:42:43Z" finished-at="2018-06-06T16:42:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.accp.test.demo.PayCreate@5579bb86]" name="beforeClass" is-config="true" duration-ms="512" started-at="2018-06-06T16:42:54Z" finished-at="2018-06-06T16:42:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.accp.test.demo.PayCreate@5579bb86]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-06T16:42:54Z" finished-at="2018-06-06T16:42:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.accp.test.demo.PayCreate.payCreateTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="payCreateTest(java.util.Map)[pri:0, instance:com.accp.test.demo.PayCreate@5579bb86]" name="payCreateTest" duration-ms="453" started-at="2018-06-06T16:42:54Z" description="accp统一支付创单接口测试" data-provider="payCreateTest" finished-at="2018-06-06T16:42:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expect_retcode=000000, pay_expire=120, goods_name=商品信息, goods_url=, oid_partner=201707041000000000, actual_retmsg=222222, payee_accttype=acconut, case_title=主流程, row_num=row_01, payee_id=payeeid-user-0000001, payee_memo=分润, notify_url=https://www.*****.com/txn/notify, payee_type=USER, order_info=订单描述, actual_retcode=11111, txn_type=GENERAL_CONSUME, user_id=user000xx0sdff022, total_amount=20170824102755, txn_seqno=4d80a9b351f8b167a661c84dc013e927, txn_time=20170824102755, payee_amount=1.50, Y=, return_url=, expect_retmsg=请求处理成功}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.accp.test.demo.PayCreate.payCreateTest(PayCreate.java:113)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:46)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:37)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- payCreateTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.accp.test.demo.PayCreate@5579bb86]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-06T16:42:55Z" finished-at="2018-06-06T16:42:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.accp.test.demo.PayCreate.payCreateTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="FAIL" signature="payCreateTest(java.util.Map)[pri:0, instance:com.accp.test.demo.PayCreate@5579bb86]" name="payCreateTest" duration-ms="509" started-at="2018-06-06T16:42:55Z" description="accp统一支付创单接口测试" data-provider="payCreateTest" finished-at="2018-06-06T16:42:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expect_retcode=000000, pay_expire=120, goods_name=商品信息, goods_url=, oid_partner=201707041000000000, actual_retmsg=222222, payee_accttype=acconut, case_title=主流程, row_num=row_02, payee_id=payeeid-user-0000001, payee_memo=分润, notify_url=https://www.*****.com/txn/notify, payee_type=USER, order_info=订单描述, actual_retcode=11111, txn_type=GENERAL_CONSUME, user_id=user000xx0sdff022, total_amount=20170824102755, txn_seqno=4d80a9b351f8b167a661c84dc013e927, txn_time=20170824102755, payee_amount=1.50, Y=, return_url=, expect_retmsg=请求处理成功}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.accp.test.demo.PayCreate.payCreateTest(PayCreate.java:113)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:46)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:37)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- payCreateTest -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.accp.test.demo.PayCreate@5579bb86]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-06T16:42:55Z" finished-at="2018-06-06T16:42:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.accp.test.demo.PayCreate.payCreateTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.accp.test.demo.PayCreate@5579bb86]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-06T16:42:55Z" finished-at="2018-06-06T16:42:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.accp.test.demo.PayCreate.payCreateTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.accp.test.demo.PayCreate@5579bb86]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-06T16:42:55Z" finished-at="2018-06-06T16:42:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.accp.test.demo.PayCreate.payCreateTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="FAIL" signature="payCreateTest(java.util.Map)[pri:0, instance:com.accp.test.demo.PayCreate@5579bb86]" name="payCreateTest" duration-ms="440" started-at="2018-06-06T16:42:55Z" description="accp统一支付创单接口测试" data-provider="payCreateTest" finished-at="2018-06-06T16:42:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expect_retcode=000000, pay_expire=120, goods_name=商品信息, goods_url=, oid_partner=201707041000000000, actual_retmsg=222222, payee_accttype=acconut, case_title=主流程, row_num=row_03, payee_id=payeeid-user-0000001, payee_memo=分润, notify_url=https://www.*****.com/txn/notify, payee_type=USER, order_info=订单描述, actual_retcode=11111, txn_type=GENERAL_CONSUME, user_id=user000xx0sdff022, total_amount=20170824102755, txn_seqno=4d80a9b351f8b167a661c84dc013e927, txn_time=20170824102755, payee_amount=1.50, Y=, return_url=, expect_retmsg=请求处理成功}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.accp.test.demo.PayCreate.payCreateTest(PayCreate.java:113)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:46)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:37)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- payCreateTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.accp.test.demo.PayCreate@5579bb86]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-06T16:42:56Z" finished-at="2018-06-06T16:42:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.accp.test.demo.PayCreate.payCreateTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.accp.test.demo.PayCreate@5579bb86]" name="afterClass" is-config="true" duration-ms="2" started-at="2018-06-06T16:42:56Z" finished-at="2018-06-06T16:42:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.accp.test.demo.PayCreate -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
